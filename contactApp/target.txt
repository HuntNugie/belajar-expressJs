1.menampilkan data dari json ()
2.di dalam table hanya ada nama,nomor telepon dan aksi detail button ()
3. membuat halaman detail button ()
4. membuat fungsi untuk mencari dari data json sesuai email () 
5. menggunakan hasil dari pencarian fungsi mencari berdasarkan email nya untuk halaman detail ()
6. error handling ketika daftar contact nya kosong ()
7. error handling ketika detail contact nya tidak ada ()
8. membuat halaman form tambah data ()
9. membuat fungsi untuk tambah data ()
10. membuat fungsi untuk save tambah data ()
11. membat validator dengan express validator ()
12. kelola jika tidak valid tampilkan alert
13. tambahkan flash massage(express-session,cookie-parse,connect-flash)
14. membuat fitur untuk delete (gunakan restfull serta membuat button delete)()
15. membuat halaman untuk edit ()
16. membuat fitur untuk update(gunakan restfull serta membuat button update) ()


password=mN8INzhK68DwkPGj

const { MongoClient, ServerApiVersion } = require('mongodb');
const uri = "mongodb+srv://nugiebinhar_db_user:mN8INzhK68DwkPGj@clusterngk.2zcdmg2.mongodb.net/?retryWrites=true&w=majority&appName=ClusterNGK";

// Create a MongoClient with a MongoClientOptions object to set the Stable API version
const client = new MongoClient(uri, {
  serverApi: {
    version: ServerApiVersion.v1,
    strict: true,
    deprecationErrors: true,
  }
});

async function run() {
  try {
    // Connect the client to the server	(optional starting in v4.7)
    await client.connect();
    // Send a ping to confirm a successful connection
    await client.db("admin").command({ ping: 1 });
    console.log("Pinged your deployment. You successfully connected to MongoDB!");
  } finally {
    // Ensures that the client will close when you finish/error
    await client.close();
  }
}
run().catch(console.dir);

